# (1) retrieve cost and usage data for the last 30 day
# (2) analyze the data to identify areas for optimization
# (3) run Trusted Advisor checks to identify additional optimization opportunities
# cost and usage data is stored in a JSON file and can be analyzed using a JSON parser such as jq
# Trusted Advisor checks provide recommendations for optimizing costs, improving performance, and increasing security
# results are output in tab-separated format, making it easy to process and analyz

#!/bin/bash

# Get cost and usage data for the last 30 days

aws ce get-cost-and-usage \

. — time-period Start=`date -d “-30 days” +”%Y-%m-%d”`,End=`date +”%Y-%m-%d”` \

. — granularity MONTHLY \

. — metrics “BlendedCost” \

. — group-by Type=DIMENSION,Key=SERVICE > cost_and_usage_data.json

# Analyze the cost and usage data and identify areas for optimization

cat cost_and_usage_data.json | jq -r ‘.ResultsByTime[] | [.TimePeriod.Start, .TimePeriod.End, .Total.BlendedCost] | @tsv’ | awk -F $’\t’ ‘BEGIN {print “Start\tEnd\tCost”} {print $1"\t”$2"\t”$3}’

# Run Trusted Advisor checks to identify additional optimization opportunities

aws support describe-trusted-advisor-checks — language en | jq -r ‘.checks[].id’ | while read check_id; do aws support describe-trusted-advisor-check-result — check-id $check_id; done | jq -r ‘.result.flaggedResources[] | [.status, .category, .metadata[0], .metadata[1], .metadata[2]] | @tsv’
